<controls:MetroWindow
    x:Class="MusicerBeat.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:MusicerBeat.Behaviors"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:MusicerBeat.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:MusicerBeat.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:MusicerBeat.ViewModels"
    Title="{Binding Title}"
    Width="1024"
    Height="600"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{StaticResource DarkBgBrush}"
    TitleCharacterCasing="Normal"
    mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/CustomTVControlTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:VolumePercentageConverter x:Key="VolumePercentageConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Key="OemComma"
            Command="{Binding ShowSettingPageCommand}"
            Modifiers="Control" />
    </Window.InputBindings>

    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                <Setter Property="FontSize" Value="{StaticResource BasicFontSize}" />
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.6*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3">
            <Menu>
                <MenuItem Header="View">
                    <MenuItem Command="{Binding ShowHistoryPageCommand}" Header="Listen history" />
                    <MenuItem Command="{Binding ShowSettingPageCommand}" Header="Setting" />
                </MenuItem>
                <MenuItem Header="Sort">
                    <MenuItem Command="{Binding SoundListViewModel.ShufflePlayListCommand}" Header="Shuffle Playlist" />
                    <MenuItem Command="{Binding SoundListViewModel.ReversePlayListCommand}" Header="Revers Playlist" />
                    <MenuItem Command="{Binding SoundListViewModel.SortPlayListByPlayCountCommand}" Header="Sort by play count (Asc)" />
                    <MenuItem Command="{Binding SoundListViewModel.SortPlayListByFileNameCommand}" Header="Sort by file name (Asc)" />
                </MenuItem>
            </Menu>
            <TextBox
                Background="Transparent"
                FontSize="{StaticResource BasicFontSize}"
                Foreground="{StaticResource ForegroundBrush}"
                Text="{Binding DirectoryAreaViewModel.CurrentStorage.FullPath}" />

        </StackPanel>

        <!--  ディレクトリエリア  -->
        <TreeView
            Grid.Row="1"
            Grid.Column="0"
            AlternationCount="2"
            Background="Transparent"
            ItemsSource="{Binding DirectoryAreaViewModel.SoundStorages}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding DirectoryAreaViewModel.RaiseSelectionChangedEventCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}, Path=SelectedItem}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TreeView.InputBindings>
                <KeyBinding Key="Back" Command="{Binding DirectoryAreaViewModel.DirectoryUpCommand}" />
                <KeyBinding Key="Return" Command="{Binding DirectoryAreaViewModel.OpenDirectoryCommand}" />
            </TreeView.InputBindings>

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="Template" Value="{StaticResource TreeViewCustomControlTemplate}" />
                    <Setter Property="Margin" Value="1" />

                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource MediumBgBrush}" />
                        </Trigger>
                    </Style.Triggers>

                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:SoundStorage}" ItemsSource="{Binding Children}">
                    <StackPanel Margin="4,1" Orientation="Horizontal">
                        <StackPanel.InputBindings>
                            <MouseBinding Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}, Path=DataContext.DirectoryAreaViewModel.OpenDirectoryCommand}" Gesture="LeftDoubleClick" />
                        </StackPanel.InputBindings>
                        <TextBlock
                            FontSize="{StaticResource BasicFontSize}"
                            Foreground="{StaticResource ForegroundBrush}"
                            Text="{Binding Name}" />

                        <Border Width="0" Margin="4,0" />

                        <TextBlock FontSize="{StaticResource BasicFontSize}" Foreground="{StaticResource ForegroundBrush}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEmpty}" Value="False">
                                            <Setter Property="Text" Value="[+]" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                            <Setter Property="Text" Value="[-]" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>

                <!-- <DataTemplate DataType="{x:Type models:SoundStorage}"> -->
                <!-- </DataTemplate> -->
            </TreeView.ItemTemplate>
        </TreeView>

        <GridSplitter
            Grid.Row="1"
            Grid.Column="1"
            Width="4"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch"
            Background="Gray" />

        <ListBox
            Grid.Row="1"
            Grid.Column="2"
            HorizontalContentAlignment="Stretch"
            AlternationCount="2"
            Background="Transparent"
            ItemsSource="{Binding SoundListViewModel.Sounds}"
            SelectedItem="{Binding SoundListViewModel.SelectedItem}">

            <ListBox.InputBindings>
                <KeyBinding
                    Key="S"
                    Command="{Binding SoundListViewModel.ToggleSkipCommand}"
                    Modifiers="Control" />
            </ListBox.InputBindings>

            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type models:SoundFile}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                                <Setter Property="FontSize" Value="{StaticResource BasicFontSize}" />
                            </Style>
                        </Grid.Resources>

                        <Grid.InputBindings>
                            <MouseBinding
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.PlaybackControlViewmodel.PlayCommand}"
                                CommandParameter="{Binding}"
                                Gesture="LeftDoubleClick" />
                        </Grid.InputBindings>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="60" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Border Width="5" CornerRadius="3">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Playing}" Value="True">
                                                <Setter Property="Background" Value="MediumSeaGreen" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>

                            <Border Margin="4,0" BorderThickness="0,0,1,0">
                                <TextBlock Text="{Binding Index, StringFormat={}{0:D3}}" />
                            </Border>

                            <Border Width="1" Background="Gray" />
                        </StackPanel>

                        <Border
                            Grid.Column="1"
                            BorderBrush="Gray"
                            BorderThickness="0,0,1,0">
                            <TextBlock Padding="3,0" Text="{Binding ListenCount}" />
                        </Border>

                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <TextBlock Margin="5,0" Text="{Binding NameWithoutExtension}" />
                            <TextBlock Margin="5,0" Foreground="IndianRed">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSkip}" Value="True">
                                                <Setter Property="Text" Value="(Skip)" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>

                        <TextBlock
                            Grid.Column="3"
                            Margin="5,0"
                            FontSize="{StaticResource BasicFontSize}"
                            Text="{Binding TotalMilliSeconds, Converter={StaticResource IntToTimeSpanConverter}}" />

                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource MediumBgBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <Border
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            BorderBrush="Gray"
            BorderThickness="0,1,0,0">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel
                    Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Horizontal">
                    <Button
                        Width="100"
                        Margin="10"
                        Padding="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="{Binding PlaybackControlViewmodel.PlayCommand}">
                        <iconPacks:PackIconMaterial Height="18" Kind="Play" />
                    </Button>

                    <Button
                        Width="80"
                        Margin="10"
                        Padding="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="{Binding PlaybackControlViewmodel.PlayNextCommand}">
                        <iconPacks:PackIconMaterial Height="18" Kind="SkipNext" />
                    </Button>

                    <Button
                        Width="60"
                        Padding="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="{Binding PlaybackControlViewmodel.StopCommand}">
                        <iconPacks:PackIconMaterial Height="18" Kind="Stop" />
                    </Button>
                </StackPanel>

                <StackPanel
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="15"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <ToggleButton Margin="15,0" IsChecked="{Binding PlaybackControlViewmodel.PlayListSource.SequentialSelector.IsLoop}">
                        <ToggleButton.Content>
                            <TextBlock
                                Margin="8,0"
                                Foreground="Black"
                                Text="Loop" />
                        </ToggleButton.Content>
                    </ToggleButton>

                    <TextBlock VerticalAlignment="Center" Text="Vol :" />
                    <TextBlock
                        Width="25"
                        VerticalAlignment="Center"
                        Text="{Binding PlaybackControlViewmodel.Volume, Converter={StaticResource VolumePercentageConverter}}"
                        TextAlignment="Center" />
                    <Border Margin="5,0" />
                    <Slider
                        Width="250"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Maximum="1.0"
                        Minimum="0"
                        Ticks="0.01"
                        Value="{Binding PlaybackControlViewmodel.Volume}">
                        <Slider.Style>
                            <Style TargetType="Slider">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding PlaybackControlViewmodel.PlayingStatus}" Value="{x:Static models:PlayingStatus.Fading}">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </StackPanel>

                <Border
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Stretch">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset="0.1" Color="LightSteelBlue" />
                            <GradientStop Offset="1.0" Color="LightSkyBlue" />
                        </LinearGradientBrush>
                    </Border.Background>

                    <StackPanel>
                        <StackPanel Margin="4" Orientation="Horizontal">

                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize" Value="{StaticResource BasicFontSize}" />
                                </Style>
                            </StackPanel.Resources>

                            <TextBlock Text="{Binding PlaybackControlViewmodel.PlaybackInformationViewer.PlayingFileName}" />
                            <TextBlock Margin="4,0" Text="{Binding PlaybackControlViewmodel.PlaybackInformationViewer.PlaybackTimeString}" />
                        </StackPanel>

                        <controls:MetroProgressBar
                            Height="3"
                            Maximum="{Binding PlaybackControlViewmodel.PlaybackInformationViewer.CurrentSoundLength}"
                            Minimum="0">
                            <i:Interaction.Behaviors>
                                <behaviors:SmoothProgressBehavior AnimationDuration="0:0:0.2" TargetValue="{Binding PlaybackControlViewmodel.PlaybackInformationViewer.CurrentSoundPosition}" />
                            </i:Interaction.Behaviors>
                        </controls:MetroProgressBar>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>

    </Grid>
</controls:MetroWindow>