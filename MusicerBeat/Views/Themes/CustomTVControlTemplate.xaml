<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        x:Key="TreeViewCustomControlTemplate"
        TargetType="TreeViewItem">
        <Grid HorizontalAlignment="Stretch">
            <!--
                        <Grid>
            -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="19" />
                <ColumnDefinition Width="*" />
                <!-- Change to expand width of tree items to base TreeView size (expand to right edge)
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                -->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton
                Name="Expander"
                ClickMode="Press"
                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsExpanded, Mode=TwoWay}">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                        <Style.Resources>
                            <ResourceDictionary />
                        </Style.Resources>
                        <Setter Property="Focusable">
                            <Setter.Value>
                                <s:Boolean>False</s:Boolean>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Width">
                            <Setter.Value>
                                <s:Double>16</s:Double>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Height">
                            <Setter.Value>
                                <s:Double>16</s:Double>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border
                                        Width="30"
                                        Height="30"
                                        Padding="5,5,5,5"
                                        Background="#00FFFFFF">
                                        <Path
                                            Name="ExpandPath"
                                            Fill="#00FFFFFF"
                                            Stroke="#FF989898">
                                            <Path.Data>
                                                <!--  ※②マークを変えるにはここの値を変える  -->
                                                <PathGeometry Figures="M0,0L0,10L10,0z" />
                                            </Path.Data>
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="UIElement.IsMouseOver">
                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Trigger.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Trigger.Value>
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked">
                                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ExpandPath" Property="Shape.Fill">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF595959</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke">
                                                <Setter.Value>
                                                    <SolidColorBrush>#FF262626</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Trigger.Value>
                                                <s:Boolean>True</s:Boolean>
                                            </Trigger.Value>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <Border
                Name="Bd"
                Grid.Row="0"
                Grid.Column="1"
                Padding="{TemplateBinding Control.Padding}"
                Background="{TemplateBinding Panel.Background}"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                BorderThickness="{TemplateBinding Border.BorderThickness}"
                CornerRadius="4"
                SnapsToDevicePixels="True">
                <ContentPresenter
                    Name="PART_Header"
                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                    Content="{TemplateBinding HeaderedContentControl.Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                    ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>

            <!--
                            <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"/>
            -->

            <ItemsPresenter
                Name="ItemsHost"
                Grid.Row="1"
                Grid.Column="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded">
                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems">
                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="{x:Static Visibility.Hidden}" />
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected">
                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TreeViewItem.IsSelected">
                        <Condition.Value>
                            <s:Boolean>True</s:Boolean>
                        </Condition.Value>
                    </Condition>
                    <Condition Property="Selector.IsSelectionActive">
                        <Condition.Value>
                            <s:Boolean>False</s:Boolean>
                        </Condition.Value>
                    </Condition>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Panel.Background" Value="RoyalBlue" />
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>